#!/usr/bin/env python

import argparse 
import sys
ap = argparse.ArgumentParser(description="print nonzero (or non something) counts")
ap.add_argument("input", help="Input file name")
ap.add_argument("output", help="Output file name", nargs='?', default="/dev/stdout")
ap.add_argument("--min", help="Change minimum print value", default=1, type=int)
ap.add_argument("--blacklist", help="Do not print if on this blacklist", default=None)
ap.add_argument("--blacklistMin", help="Adjust minimum count on blacklist.", default=0, type=int)
ap.add_argument("--onlyblacklist", help="Only print blacklisted value.", default=False, action='store_true')
args = ap.parse_args()
inFile = open(args.input)
outFile = open(args.output, 'w')

blacklist = {}
if (args.blacklist is not None):
    blFile = open(args.blacklist, 'r')
    for line in blFile:
        vals = line.split()
        if (int(vals[1]) > args.blacklistMin):
            blacklist[vals[0]] = True
            
lineNumber = 1
numBlacklisted = 0
for line in inFile:
    vals = line.split()
    if (args.onlyblacklist == False and int(vals[2]) >= args.min and vals[1] not in blacklist):
        outFile.write( str(lineNumber) + "\t" + line.strip() + "\n")
    if (args.onlyblacklist == True and int(vals[2]) >= args.min and vals[1] in blacklist):
        outFile.write( str(lineNumber) + "\t" + line.strip() + "\n")
    if (int(vals[2]) >= args.min and vals[1] in blacklist):
        numBlacklisted += 1
    lineNumber +=1
outFile.close()

sys.stderr.write(args.input + "\t" + str(numBlacklisted) + "\n")
